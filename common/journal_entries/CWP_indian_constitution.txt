indian_constitution = {
	icon = "gfx/interface/icons/event_icons/event_industry.dds"

	immediate = {
	}

	complete = {
		custom_tooltip = {
			text = indian_constitution_var1_tt
			has_variable = indian_constitution_1
		}
		custom_tooltip = {
			text = indian_constitution_var2_tt
			has_variable = indian_constitution_2
		}
		custom_tooltip = {
			text = indian_constitution_var3_tt
			has_variable = indian_constitution_3
		}
		custom_tooltip = {
			text = indian_constitution_var4_tt
			has_variable = indian_constitution_4
		}
		custom_tooltip = {
			text = indian_constitution_var5_tt
			has_variable = indian_constitution_5
		}
		custom_tooltip = {
			text = indian_constitution_var6_tt
			has_variable = indian_constitution_6
		}
	}

	# effect which is executed when 'complete' trigger becomes true
	on_complete = {
	}

	# failure trigger, should spawn event explaining what happens when triggered, framed as a failure; if left blank, cannot fail
	fail = {
	}

	# effect which is executed when 'fail' trigger becomes true
	on_fail = {
	}

	# optional invalidation trigger, should not notify player when it triggers, just clean up and silently disappear due to journal entry no longer being valid; if left blank, cannot be invalidated
	invalid = {

	}

	# effect which is executed when 'invalid' trigger becomes true
	on_invalid = {

	}

	# the number of days before this journal entry forcibly transitions, can be used to transition silently or into another event, framed either as success, failure, or neutral; if left blank or set to zero, will not time out
	timeout = 0

	# effect which is executed when journal entry is timed out
	on_timeout = {
	}

	# on_action which is triggered every first day of the week
	on_weekly_pulse = {
	}

	# on_action which is triggered every first day of the month
	on_monthly_pulse = {
		events = {
			indian_constitution.1
			indian_constitution.2
			indian_constitution.3
			indian_constitution.4
			indian_constitution.5
			indian_constitution.6
		}
	}

	# on_action which is triggered every first day of the year
	on_yearly_pulse = {
		effect = {
		}
	}

	# when the journal entry is activated current_value and goal_add_value are evaluated and added together to determine the goal value
	goal_add_value = {
		value = 100
	}

	# the highest weighted active journal entry appears in the goal tracker on the main screen
	weight = 200

	# yes/no, determines if this journal entry should be transfered if the player switches country through a revolution or by releasing a subject. Note that external dependencies such as country variables etc are not automatically inherited
	transferable = yes

	# yes/no, determines if this journal entry is allowed to be inherited by a victorious revolution. Revolutions also get all variables from the defeated parent country, so most JEs *should* be inherited in this way
	# NOTE: transferable = yes will always mean that revolution inheritance is blocked as these JEs should stay with the player at all times
	can_revolution_inherit = yes

	# optional trigger, progress text is shown if this is defined and true
	is_progressing = {
	}

	# yes/no, if yes, a progress bar is shown
	progressbar = no

	# yes/no, if yes, the Journal Entry can return to an inactive state if its possible trigger reverts to false
	# if no or unspecified, an activated Journal Entry cannot return to being inactive even if it is no longer considered possible
	can_deactivate = no

	# dynamically updated text, which is shown over the progress bar of the Journal Entry
	# value can be a localization key or first_valid + triggered_desc script
	# To use in loc or UI: [JournalEntry.GetProgressDesc]
	# If this is not specified, GetProgressDesc will instead return loc from key <journal_entry_key>_progress
	progress_desc = indian_constitution_progress_desc

	# tutorial lesson explaining HOW to complete the Journal Entry
	#how_tutorial = how_tutorial_lesson_key

	# tutorial lesson explaining the WHY around the Journal Entry
	#why_tutorial = why_tutorial_lesson_key

	# whether a Journal Entry should be pinned in its outliner by default. Defaults to 'no'
	should_be_pinned_by_default = yes
}
